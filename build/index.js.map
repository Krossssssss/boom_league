{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport * as isbotModule from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  let prohibitOutOfOrderStreaming =\n    isBotRequest(request.headers.get(\"user-agent\")) || remixContext.isSpaMode;\n\n  return prohibitOutOfOrderStreaming\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\n// We have some Remix apps in the wild already running with isbot@3 so we need\n// to maintain backwards compatibility even though we want new apps to use\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\nfunction isBotRequest(userAgent: string | null) {\n  if (!userAgent) {\n    return false;\n  }\n\n  // isbot >= 3.8.0, >4\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\n    return isbotModule.isbot(userAgent);\n  }\n\n  // isbot < 3.8.0\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\n    return isbotModule.default(userAgent);\n  }\n\n  return false;\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  LiveReload } from\n\"@remix-run/react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport stylesheet from \"./tailwind.css?url\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet },\n{ rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Bangers&family=Noto+Sans+SC:wght@400;700&display=swap\" }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { LucideCat, LucideSwords, LucideCrown, LucideShield, LucideBomb, LucideScrollText, LucideUsers, LucidePlus, LucideTrash2, LucideTrophy, LucideDices, LucideClipboardList, LucideUser, LucideHome, LucideUserPlus, LucideGamepad2, LucideBarChart3, LucideMenu, LucideX, LucideSun, LucideMoon } from 'lucide-react';\n\n// Theme Context\ninterface ThemeContextType {\n    theme: 'light' | 'dark';\n    toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst useTheme = () => {\n    const context = useContext(ThemeContext);\n    if (!context) {\n        throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n};\n\n// Type definitions\ninterface Player {\n    id: string;\n    app_id: string;\n    name: string;\n    avatar: string;\n    score: number;\n    history: GameHistory[];\n    championships: number;\n    runnerUp: number;      // \u4E9A\u519B\u6B21\u6570\n    thirdPlace: number;    // \u5B63\u519B\u6B21\u6570\n}\n\ninterface GameHistory {\n    round: number;\n    placement: number;\n}\n\ninterface LeagueState {\n    app_id: string;\n    status: 'setup' | 'in_progress' | 'finished';\n    current_round: number;\n    schedule: RoundConfig[];\n    winner: Winner | null;\n}\n\ninterface Winner {\n    name: string;\n    avatar: string;\n    reason: string;\n}\n\ninterface RoundConfig {\n    round: number;\n    safeCards: number;\n    bombCards: number;\n    handLimit: number;\n    vpMode: VPMode;\n    specialRule: string;\n}\n\ninterface VPMode {\n    name: string;\n    scores: number[];\n}\n\ninterface PlayerStats {\n    totalGames: number;\n    placements: Record<number, number>;\n    averagePlacement: string;\n    winRate: string;\n    championships: number;\n}\n\n// Component prop interfaces\ninterface SidebarProps {\n    currentPage: string;\n    setCurrentPage: (page: string) => void;\n    sidebarOpen: boolean;\n    setSidebarOpen: (open: boolean) => void;\n    players: Player[];\n    onPlayerClick: (player: Player) => void;\n}\n\ninterface LeaderboardProps {\n    players: Player[];\n    onPlayerClick?: (player: Player) => void;\n}\n\ninterface PlayerProfilesProps {\n    players: Player[];\n    onPlayerClick?: (player: Player) => void;\n}\n\ninterface InfoCardProps {\n    icon: React.ReactNode;\n    title: string;\n    value: string | number;\n}\n\ninterface ScheduleTimelineProps {\n    schedule: RoundConfig[];\n    currentRound: number;\n}\n\ninterface HomePageProps {\n    leagueState: LeagueState | null;\n    players: Player[];\n    handleStartLeague: () => void;\n    handleResetLeague: () => void;\n    handlePlayerClick: (player: Player) => void;\n}\n\ninterface PlayerRegistrationPageProps {\n    players: Player[];\n    handleAddPlayer: () => void;\n    handleDeletePlayer: (playerId: string) => void;\n    handlePlayerClick: (player: Player) => void;\n    newPlayerName: string;\n    setNewPlayerName: (name: string) => void;\n    selectedAvatar: string;\n    setSelectedAvatar: (avatar: string) => void;\n    showPlayerModal: boolean;\n    setShowPlayerModal: (show: boolean) => void;\n}\n\ninterface LeagueManagementPageProps {\n    leagueState: LeagueState | null;\n    players: Player[];\n    handleStartLeague: () => void;\n    handleResetLeague: () => void;\n    renderInProgress: () => React.ReactNode;\n    setShowResultsModal: (show: boolean) => void;\n}\n\ninterface PlayerRankingsPageProps {\n    players: Player[];\n    onPlayerClick: (player: Player) => void;\n}\n\ninterface PlayerProfileModalProps {\n    player: Player;\n    onClose: () => void;\n}\n\ninterface ModalProps {\n    children: React.ReactNode;\n    onClose: () => void;\n    title: string;\n}\n\ninterface ResultsModalProps {\n    players: Player[];\n    onClose: () => void;\n    onSubmit: (results: string[]) => void;\n    round: number;\n}\n\n// --- Supabase \u914D\u7F6E ---\nconst supabaseUrl = 'https://gatiuwpldvmxeeraldue.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdhdGl1d3BsZHZteGVlcmFsZHVlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ3MDAwNjQsImV4cCI6MjA3MDI3NjA2NH0.Ncs_pWIXZJ5gVw9PasggTAGWgQX9OnUGTnpjHg1eZvE';\n\nlet supabase: any;\n\n// --- \u968F\u673A\u6570\u636E\u751F\u6210\u5668 ---\nconst UTILS = {\n    getRandomElement: (arr: any[]): any => arr[Math.floor(Math.random() * arr.length)],\n    calculatePlayerStats: (player: Player): PlayerStats => {\n        const history = player.history || [];\n        const totalGames = history.length;\n        const placements: Record<number, number> = history.reduce((acc, game) => {\n            acc[game.placement] = (acc[game.placement] || 0) + 1;\n            return acc;\n        }, {} as Record<number, number>);\n        \n        const averagePlacement = totalGames > 0 \n            ? (history.reduce((sum, game) => sum + game.placement, 0) / totalGames).toFixed(1)\n            : 'N/A';\n            \n        const winRate = totalGames > 0 \n            ? ((placements[1] || 0) / totalGames * 100).toFixed(1)\n            : '0';\n            \n        return {\n            totalGames,\n            placements,\n            averagePlacement,\n            winRate,\n            championships: player.championships || 0\n        };\n    }\n};\n\n// --- \u6E38\u620F\u89C4\u5219\u5E38\u91CF ---\nconst GAME_RULES = {\n    WIN_SCORE: 12,\n    MAX_ROUNDS: 5,\n    VP_MODES: [\n        { name: \"5\u5206\u5C40 (5/3/1)\", scores: [5, 3, 1, 0, 0, 0] },\n        { name: \"5\u5206\u5C40 (5/4/3)\", scores: [5, 4, 3, 0, 0, 0] },\n        { name: \"4\u5206\u5C40 (4/2/1)\", scores: [4, 2, 1, 0, 0, 0] },\n        { name: \"4\u5206\u5C40 (4/3/2)\", scores: [4, 3, 2, 0, 0, 0] },\n        { name: \"3\u5206\u5C40 (3/2/1)\", scores: [3, 2, 1, 0, 0, 0] },\n        { name: \"3\u5206\u5C40 (3/1/0)\", scores: [3, 1, 0, 0, 0, 0] },\n    ],\n    SPECIAL_RULES: [\n        \"\u65E0\u7279\u6B8A\u89C4\u5219\",\n        \"\u624B\u724C\u660E\u724C\",\n        \"\u7981\u6B62\u4F7F\u7528 Skip\",\n        \"\u732B\u724C\u89C6\u4E3A Skip\",\n    ],\n    AVATARS: [\n        '\uD83D\uDE3C', '\uD83D\uDE3B', '\uD83D\uDE40', '\uD83D\uDE3F', '\uD83D\uDE3E', '\uD83D\uDE38', '\uD83D\uDE39', '\uD83D\uDE3A', '\uD83D\uDE3D',\n        '\uD83D\uDC31', '\uD83D\uDC08', '\uD83D\uDC08\u200D\u2B1B', '\uD83E\uDD81', '\uD83D\uDC05', '\uD83D\uDC06', '\uD83D\uDC2F', '\uD83D\uDE48', '\uD83D\uDE49', \n        '\uD83D\uDE4A', '\uD83D\uDC35', '\uD83E\uDD8A', '\uD83D\uDC3A', '\uD83D\uDC36', '\uD83D\uDC15', '\uD83E\uDD9D', '\uD83D\uDC28', '\uD83D\uDC3C',\n        '\uD83D\uDC39', '\uD83D\uDC2D', '\uD83D\uDC30', '\uD83D\uDC3B', '\uD83D\uDC3B\u200D\u2744\uFE0F', '\uD83D\uDC38', '\uD83D\uDC32', '\uD83E\uDD84', '\uD83C\uDFAD'\n    ],\n};\n\n// --- \u4E3B\u5E94\u7528\u7EC4\u4EF6 ---\nexport default function Index() {\n    const [leagueState, setLeagueState] = useState<LeagueState | null>(null);\n    const [players, setPlayers] = useState<Player[]>([]);\n    const [session, setSession] = useState<any>(null);\n    const [isAuthReady, setIsAuthReady] = useState<boolean>(false);\n    const [showPlayerModal, setShowPlayerModal] = useState<boolean>(false);\n    const [showResultsModal, setShowResultsModal] = useState<boolean>(false);\n    const [newPlayerName, setNewPlayerName] = useState<string>(\"\");\n    const [selectedAvatar, setSelectedAvatar] = useState<string>(GAME_RULES.AVATARS[0]);\n    const [showPlayerProfileModal, setShowPlayerProfileModal] = useState<boolean>(false);\n    const [selectedPlayerForProfile, setSelectedPlayerForProfile] = useState<Player | null>(null);\n    const [winner, setWinner] = useState<Winner | null>(null);\n    const [appId, setAppId] = useState<string>('default');\n    const [currentPage, setCurrentPage] = useState<string>('home');\n    const [sidebarOpen, setSidebarOpen] = useState<boolean>(false);\n    const [theme, setTheme] = useState<'light' | 'dark'>('dark');\n\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            const urlParams = new URLSearchParams(window.location.search);\n            const canvasAppId = urlParams.get('app_id') || 'default';\n            setAppId(canvasAppId);\n\n            // Initialize theme from localStorage\n            const savedTheme = localStorage.getItem('boom-league-theme') as 'light' | 'dark' | null;\n            if (savedTheme) {\n                setTheme(savedTheme);\n            }\n\n            supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n            supabase.auth.getSession().then(({ data: { session } }: any) => {\n                setSession(session)\n                if(!session){\n                    supabase.auth.signInAnonymously();\n                }\n                setIsAuthReady(true);\n            })\n\n            const {\n                data: { subscription },\n            } = supabase.auth.onAuthStateChange((_event: any, session: any) => {\n                setSession(session)\n                setIsAuthReady(true);\n            })\n\n            return () => subscription.unsubscribe()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!isAuthReady || !supabase) return;\n\n        const fetchInitialData = async () => {\n            const { data: leagueData, error: leagueError } = await supabase\n                .from('league_state')\n                .select('*')\n                .eq('app_id', appId)\n                .single();\n            \n            if (leagueData) {\n                setLeagueState(leagueData);\n                if (leagueData.winner) setWinner(leagueData.winner);\n                else setWinner(null);\n            } else {\n                 setLeagueState(null);\n            }\n             if(leagueError && leagueError.code !== 'PGRST116') console.error(\"Error fetching league state:\", leagueError);\n\n\n            const { data: playersData, error: playersError } = await supabase\n                .from('players')\n                .select('*')\n                .eq('app_id', appId)\n                .order('score', { ascending: false });\n\n            if (playersData) setPlayers(playersData);\n            if (playersError) console.error(\"Error fetching players:\", playersError);\n        };\n\n        fetchInitialData();\n\n        const leagueChannel = supabase.channel(`league-state:${appId}`)\n            .on('postgres_changes', { event: '*', schema: 'public', table: 'league_state', filter: `app_id=eq.${appId}` }, (payload: any) => {\n                const updatedState = payload.new;\n                setLeagueState(updatedState);\n                if (updatedState.winner) setWinner(updatedState.winner);\n                else setWinner(null);\n            })\n            .subscribe();\n\n        const playersChannel = supabase.channel(`players:${appId}`)\n            .on('postgres_changes', { event: '*', schema: 'public', table: 'players', filter: `app_id=eq.${appId}` }, \n            (payload: any) => {\n                if (payload.eventType === 'INSERT') {\n                    setPlayers(currentPlayers => {\n                        const exists = currentPlayers.some(p => p.id === payload.new.id);\n                        const next = exists ? currentPlayers : [...currentPlayers, payload.new];\n                        return next.sort((a, b) => b.score - a.score);\n                    });\n                }\n                if (payload.eventType === 'UPDATE') {\n                    setPlayers(currentPlayers => currentPlayers.map(p => p.id === payload.new.id ? payload.new : p).sort((a, b) => b.score - a.score));\n                }\n                if (payload.eventType === 'DELETE') {\n                    setPlayers(currentPlayers => currentPlayers.filter(p => p.id !== payload.old.id));\n                }\n            })\n            .subscribe();\n\n        return () => {\n            supabase.removeChannel(leagueChannel);\n            supabase.removeChannel(playersChannel);\n        };\n    }, [isAuthReady, appId]);\n\n    // --- \u8054\u8D5B\u7BA1\u7406\u529F\u80FD ---\n    const handleAddPlayer = async () => {\n        if (newPlayerName.trim() === \"\" || players.length >= 6) return;\n\n        const tempPlayer = {\n            id: `temp_${Date.now()}`,\n            app_id: appId,\n            name: newPlayerName.trim(),\n            avatar: selectedAvatar,\n            score: 0,\n            history: [],\n            championships: 0,\n            runnerUp: 0,      // \u4E9A\u519B\u6B21\u6570\n            thirdPlace: 0,    // \u5B63\u519B\u6B21\u6570\n        } as any;\n\n        // Optimistic add\n        setPlayers((curr) => [...curr, tempPlayer].sort((a, b) => b.score - a.score));\n\n        const { data, error } = await supabase\n            .from('players')\n            .insert({\n                app_id: appId,\n                name: tempPlayer.name,\n                avatar: selectedAvatar,\n                score: 0,\n                history: [],\n                championships: 0,\n                runnerUp: 0,      // \u4E9A\u519B\u6B21\u6570\n                thirdPlace: 0,    // \u5B63\u519B\u6B21\u6570\n            })\n            .select()\n            .single();\n\n        if (error) {\n            // Rollback optimistic add on error\n            setPlayers((curr) => curr.filter((p) => p.id !== tempPlayer.id));\n            console.error('Add player failed:', error);\n        } else if (data) {\n            // Replace temp with real row\n            setPlayers((curr) =>\n                curr\n                    .map((p) => (p.id === tempPlayer.id ? data : p))\n                    .sort((a, b) => b.score - a.score)\n            );\n        }\n\n        setNewPlayerName(\"\");\n        setSelectedAvatar(GAME_RULES.AVATARS[0]);\n        setShowPlayerModal(false);\n    };\n\n    const handleDeletePlayer = async (playerId: string) => {\n        // Optimistic remove\n        const previous = players;\n        setPlayers((curr) => curr.filter((p) => p.id !== playerId));\n\n        const { error } = await supabase\n            .from('players')\n            .delete()\n            .match({ id: playerId, app_id: appId });\n\n        if (error) {\n            console.error('Delete player failed:', error);\n            // Rollback on error\n            setPlayers(previous);\n        }\n    };\n\n    const generateSchedule = (playerCount: number): RoundConfig[] => {\n        let schedule: RoundConfig[] = [];\n        for (let i = 0; i < GAME_RULES.MAX_ROUNDS; i++) {\n            const safeCardMultipliers = [1, 2, 3, 4];\n            const bombCardAdditions = [1, playerCount + 1];\n            const handLimits = [4, 5, 6, Infinity];\n\n            schedule.push({\n                round: i + 1,\n                safeCards: playerCount * UTILS.getRandomElement(safeCardMultipliers),\n                bombCards: UTILS.getRandomElement(bombCardAdditions),\n                handLimit: UTILS.getRandomElement(handLimits),\n                vpMode: UTILS.getRandomElement(GAME_RULES.VP_MODES),\n                specialRule: UTILS.getRandomElement(GAME_RULES.SPECIAL_RULES),\n            });\n        }\n        return schedule;\n    };\n\n    const handleStartLeague = async () => {\n        if (players.length < 2) return;\n\n        const schedule = generateSchedule(players.length);\n\n        // Optimistic state update\n        setLeagueState({\n            app_id: appId,\n            status: 'in_progress',\n            current_round: 1,\n            schedule,\n            winner: null,\n        } as any);\n\n        const { error } = await supabase\n            .from('league_state')\n            .upsert(\n                {\n                    app_id: appId,\n                    status: 'in_progress',\n                    current_round: 1,\n                    schedule: schedule,\n                    winner: null,\n                },\n                { onConflict: 'app_id' }\n            );\n\n        if (error) {\n            console.error('Start league failed:', error);\n        }\n    };\n\n    const handleResetLeague = async () => {\n        // Optimistic players reset\n        setPlayers((curr) => curr.map((p) => ({ ...p, score: 0, history: [] })));\n        // Optimistic league state reset\n        setLeagueState({\n            app_id: appId,\n            status: 'setup',\n            current_round: 0,\n            schedule: [],\n            winner: null,\n        } as any);\n        setWinner(null);\n\n        const [{ error: pErr }, { error: lErr }] = await Promise.all([\n            supabase.from('players').update({ score: 0, history: [] }).eq('app_id', appId),\n            supabase\n                .from('league_state')\n                .upsert(\n                    {\n                        app_id: appId,\n                        status: 'setup',\n                        current_round: 0,\n                        schedule: [],\n                        winner: null,\n                    },\n                    { onConflict: 'app_id' }\n                ),\n        ]);\n\n        if (pErr || lErr) {\n            console.error('Reset league errors:', pErr, lErr);\n        }\n    };\n\n    const handlePlayerClick = (player: Player) => {\n        setSelectedPlayerForProfile(player);\n        setShowPlayerProfileModal(true);\n    };\n\n    const toggleTheme = () => {\n        const newTheme = theme === 'dark' ? 'light' : 'dark';\n        setTheme(newTheme);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('boom-league-theme', newTheme);\n        }\n    };\n\n    const handleAdvanceRound = async (results: string[]) => {\n        if (!leagueState) return;\n        \n        const currentRoundIndex = leagueState.current_round - 1;\n        const vpMode = leagueState.schedule[currentRoundIndex].vpMode;\n        \n        const updatedPlayersData = [...players];\n        const playerUpdates = [];\n\n        for(const [index, playerId] of results.entries()) {\n            const player = updatedPlayersData.find(p => p.id === playerId);\n            if (!player) continue;\n\n            const points = vpMode.scores[index] || 0;\n            const newScore = player.score + points;\n            \n            player.score = newScore;\n            player.history = [...player.history, { round: leagueState.current_round, placement: index + 1 }];\n\n            playerUpdates.push(\n                supabase\n                    .from('players')\n                    .update({ score: newScore, history: player.history })\n                    .match({ id: playerId, app_id: appId })\n            );\n        }\n        // Optimistic players update\n        setPlayers(updatedPlayersData.sort((a, b) => b.score - a.score));\n\n        await Promise.all(playerUpdates);\n        \n        const potentialWinners = updatedPlayersData\n            .filter(p => p.score >= GAME_RULES.WIN_SCORE)\n            .sort((a, b) => b.score - a.score);\n        \n        let potentialWinner = potentialWinners.length > 0 ? potentialWinners[0] : null;\n\n        let nextRound = leagueState.current_round + 1;\n        let newStatus = leagueState.status;\n        let finalWinner = null;\n\n        if (potentialWinner) {\n            finalWinner = { name: potentialWinner.name, avatar: potentialWinner.avatar, reason: `\u5728\u7B2C ${leagueState.current_round} \u8F6E\u7387\u5148\u8FBE\u5230 ${potentialWinner.score} \u5206\uFF01` };\n            newStatus = 'finished';\n            \n            // Update championship count for winner\n            potentialWinner.championships += 1;\n            playerUpdates.push(\n                supabase\n                    .from('players')\n                    .update({ championships: potentialWinner.championships })\n                    .match({ id: potentialWinner.id, app_id: appId })\n            );\n        } else if (nextRound > GAME_RULES.MAX_ROUNDS) {\n            newStatus = 'finished';\n            const sortedPlayers = updatedPlayersData.sort((a, b) => b.score - a.score);\n            const topScore = sortedPlayers[0].score;\n            const winners = sortedPlayers.filter(p => p.score === topScore);\n            if (winners.length > 1) {\n                finalWinner = { name: winners.map(w => w.name).join(' \u548C '), avatar: '\u2694\uFE0F', reason: `5\u8F6E\u540E\u5E73\u5206 (${topScore}\u5206)\uFF0C\u9700\u8981\u8FDB\u884C\u52A0\u8D5B\u5BF9\u51B3\uFF01` };\n            } else {\n                finalWinner = { name: sortedPlayers[0].name, avatar: sortedPlayers[0].avatar, reason: `5\u8F6E\u540E\u4EE5\u6700\u9AD8\u5206 (${topScore}\u5206) \u83B7\u80DC\uFF01` };\n                \n                // Update championship count for winner\n                const champion = sortedPlayers[0];\n                champion.championships += 1;\n                playerUpdates.push(\n                    supabase\n                        .from('players')\n                        .update({ championships: champion.championships })\n                        .match({ id: champion.id, app_id: appId })\n                );\n                \n                // Update runner-up and third place counts\n                if (sortedPlayers.length >= 2) {\n                    const runnerUp = sortedPlayers[1];\n                    runnerUp.runnerUp += 1;\n                    playerUpdates.push(\n                        supabase\n                            .from('players')\n                            .update({ runnerUp: runnerUp.runnerUp })\n                            .match({ id: runnerUp.id, app_id: appId })\n                    );\n                }\n                \n                if (sortedPlayers.length >= 3) {\n                    const thirdPlace = sortedPlayers[2];\n                    thirdPlace.thirdPlace += 1;\n                    playerUpdates.push(\n                        supabase\n                            .from('players')\n                            .update({ thirdPlace: thirdPlace.thirdPlace })\n                            .match({ id: thirdPlace.id, app_id: appId })\n                    );\n                }\n            }\n        }\n        \n        // Optimistic league state update\n        setLeagueState((curr: any) => ({\n            ...(curr ?? {}),\n            app_id: appId,\n            current_round: nextRound,\n            status: newStatus,\n            winner: finalWinner,\n            schedule: curr?.schedule ?? leagueState.schedule,\n        }));\n\n        await supabase\n            .from('league_state')\n            .update({\n                current_round: nextRound,\n                status: newStatus,\n                winner: finalWinner,\n            })\n            .eq('app_id', appId);\n\n        setShowResultsModal(false);\n    };\n\n\n    // --- \u6E32\u67D3\u7EC4\u4EF6 ---\n    const renderInProgress = () => {\n        if (!leagueState || !leagueState.schedule || leagueState.schedule.length === 0) return <div className=\"text-white\">\u52A0\u8F7D\u4E2D...</div>;\n        const currentRoundConfig = leagueState.schedule[leagueState.current_round - 1];\n        if (!currentRoundConfig) return <div className=\"text-white\">\u6BD4\u8D5B\u7ED3\u675F\uFF01</div>;\n        \n        return (\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                <div className=\"lg:col-span-1 flex flex-col gap-6\">\n                    <Leaderboard players={players} onPlayerClick={handlePlayerClick} />\n                    <PlayerProfiles players={players} onPlayerClick={handlePlayerClick} />\n                </div>\n                <div className=\"lg:col-span-2 flex flex-col gap-6\">\n                    <div className=\"bg-gray-800/60 backdrop-blur-sm p-6 rounded-2xl shadow-2xl border border-gray-700\">\n                         <div className=\"flex justify-between items-center mb-4\">\n                            <h2 className=\"text-3xl font-bold text-orange-400\">\u7B2C {leagueState.current_round} / {GAME_RULES.MAX_ROUNDS} \u8F6E</h2>\n                            <button onClick={() => setShowResultsModal(true)} className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-5 rounded-lg shadow-lg transition-transform transform hover:scale-105 flex items-center gap-2\">\n                                <LucideClipboardList size={20} /> \u8F93\u5165\u672C\u8F6E\u7ED3\u679C\n                            </button>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-lg\">\n                            <InfoCard icon={<LucideShield className=\"text-blue-400\" />} title=\"\u5B89\u5168\u724C\u6570\u91CF\" value={currentRoundConfig.safeCards} />\n                            <InfoCard icon={<LucideBomb className=\"text-red-400\" />} title=\"\u70B8\u5F39\u724C\u6570\u91CF\" value={currentRoundConfig.bombCards} />\n                            <InfoCard icon={<LucideSwords className=\"text-yellow-400\" />} title=\"\u51FA\u6218\u624B\u724C\u4E0A\u9650\" value={currentRoundConfig.handLimit === Infinity ? \"\u65E0\u9650\u5236\" : currentRoundConfig.handLimit} />\n                            <InfoCard icon={<LucideTrophy className=\"text-green-400\" />} title=\"VP \u5956\u52B1\u6A21\u5F0F\" value={currentRoundConfig.vpMode.name} />\n                            <InfoCard icon={<LucideDices className=\"text-purple-400\" />} title=\"\u7279\u6B8A\u89C4\u5219\" value={currentRoundConfig.specialRule} />\n                        </div>\n                    </div>\n                     <ScheduleTimeline schedule={leagueState.schedule} currentRound={leagueState.current_round} />\n                </div>\n            </div>\n        );\n    };\n\n    const renderCurrentPage = () => {\n        if (!isAuthReady) {\n            return <div className=\"text-center text-2xl p-8\">\u6B63\u5728\u8FDE\u63A5\u670D\u52A1\u5668...</div>;\n        }\n\n        switch (currentPage) {\n            case 'home':\n                return <HomePage \n                    leagueState={leagueState} \n                    players={players} \n                    handleStartLeague={handleStartLeague}\n                    handleResetLeague={handleResetLeague}\n                    handlePlayerClick={handlePlayerClick}\n                />;\n            case 'registration':\n                return <PlayerRegistrationPage \n                    players={players}\n                    handleAddPlayer={handleAddPlayer}\n                    handleDeletePlayer={handleDeletePlayer}\n                    handlePlayerClick={handlePlayerClick}\n                    newPlayerName={newPlayerName}\n                    setNewPlayerName={setNewPlayerName}\n                    selectedAvatar={selectedAvatar}\n                    setSelectedAvatar={setSelectedAvatar}\n                    showPlayerModal={showPlayerModal}\n                    setShowPlayerModal={setShowPlayerModal}\n                />;\n            case 'league':\n                return <LeagueManagementPage \n                    leagueState={leagueState}\n                    players={players}\n                    handleStartLeague={handleStartLeague}\n                    handleResetLeague={handleResetLeague}\n                    renderInProgress={renderInProgress}\n                    setShowResultsModal={setShowResultsModal}\n                />;\n            case 'rankings':\n                return <PlayerRankingsPage \n                    players={players} \n                    onPlayerClick={handlePlayerClick}\n                />;\n            default:\n                return <HomePage \n                    leagueState={leagueState} \n                    players={players} \n                    handleStartLeague={handleStartLeague}\n                    handleResetLeague={handleResetLeague}\n                    handlePlayerClick={handlePlayerClick}\n                />;\n        }\n    };\n\n    const themeClasses = {\n        container: theme === 'dark' \n            ? \"min-h-screen bg-[#0a0a0a] text-white font-sans flex relative overflow-hidden\"\n            : \"min-h-screen bg-gray-50 text-gray-900 font-sans flex relative overflow-hidden\",\n        background: theme === 'dark' \n            ? \"absolute inset-0 bg-gradient-to-br from-zinc-950 via-black to-zinc-900\"\n            : \"absolute inset-0 bg-gradient-to-br from-white via-gray-50 to-gray-100\",\n        radialGlow1: theme === 'dark'\n            ? \"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,_rgba(255,255,255,0.03)_0%,_transparent_50%)]\"\n            : \"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,_rgba(0,0,0,0.02)_0%,_transparent_50%)]\",\n        radialGlow2: theme === 'dark'\n            ? \"absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,_rgba(251,146,60,0.08)_0%,_transparent_50%)]\"\n            : \"absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,_rgba(251,146,60,0.06)_0%,_transparent_50%)]\",\n        pattern: theme === 'dark'\n            ? \"absolute inset-0 bg-[linear-gradient(45deg,_transparent_48%,_rgba(255,255,255,0.02)_49%,_rgba(255,255,255,0.02)_51%,_transparent_52%)] bg-[length:20px_20px]\"\n            : \"absolute inset-0 bg-[linear-gradient(45deg,_transparent_48%,_rgba(0,0,0,0.01)_49%,_rgba(0,0,0,0.01)_51%,_transparent_52%)] bg-[length:20px_20px]\"\n    };\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            <div className={themeClasses.container}>\n                {/* Premium background with multiple layers */}\n                <div className={themeClasses.background}></div>\n                <div className={themeClasses.radialGlow1}></div>\n                <div className={themeClasses.radialGlow2}></div>\n                <div className={themeClasses.pattern}></div>\n            \n            {/* Sidebar */}\n            <Sidebar \n                currentPage={currentPage}\n                setCurrentPage={setCurrentPage}\n                sidebarOpen={sidebarOpen}\n                setSidebarOpen={setSidebarOpen}\n                players={players}\n                onPlayerClick={handlePlayerClick}\n            />\n\n            {/* Main Content */}\n            <div className=\"flex-1 lg:ml-0 relative\">\n                {/* Mobile header */}\n                <header className={`lg:hidden flex items-center justify-between p-4 border-b ${theme === 'dark' ? 'border-white/10 bg-black/40' : 'border-gray-200/50 bg-white/80'} backdrop-blur-2xl`}>\n                    <button \n                        onClick={() => setSidebarOpen(true)}\n                        className={`p-2 rounded-lg transition-all duration-200 border border-transparent ${theme === 'dark' ? 'text-white/70 hover:text-white hover:bg-white/10 hover:border-white/20' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100 hover:border-gray-300'}`}\n                    >\n                        <LucideMenu size={18} />\n                    </button>\n                    <div className=\"flex items-center gap-2\">\n                        <div className=\"p-1.5 bg-gradient-to-br from-orange-500/20 to-orange-600/20 backdrop-blur-sm border border-orange-500/30 rounded-lg\">\n                            <LucideCat className=\"text-orange-400\" size={18} />\n                        </div>\n                        <h1 className={`text-base font-semibold ${theme === 'dark' ? 'text-white' : 'text-gray-900'} tracking-tight`}>Boom League</h1>\n                    </div>\n                    <div className=\"w-8\"></div> {/* Spacer for centering */}\n                </header>\n\n                {/* Page Content */}\n                <main className=\"p-6 lg:p-8 relative z-10\">\n                    {renderCurrentPage()}\n                </main>\n            </div>\n\n                {showPlayerModal && (\n                    <Modal onClose={() => setShowPlayerModal(false)} title=\"Add New Player\">\n                        <div className=\"flex flex-col gap-6\">\n                            <div>\n                                <label className=\"text-white/90 font-medium mb-2 block text-sm\">Player Name</label>\n                                <input\n                                    type=\"text\"\n                                    value={newPlayerName}\n                                    onChange={(e) => setNewPlayerName(e.target.value)}\n                                    placeholder=\"Enter player name\"\n                                    className=\"w-full bg-white/5 text-white p-3 rounded-lg border border-white/10 focus:outline-none focus:ring-2 focus:ring-orange-500/50 focus:border-orange-500/30 transition-all duration-200 backdrop-blur-sm\"\n                                />\n                            </div>\n                            \n                            <div>\n                                <label className=\"text-white/90 font-medium mb-3 block text-sm\">Choose Avatar</label>\n                                <div className=\"grid grid-cols-6 gap-2 max-h-32 overflow-y-auto bg-white/5 p-4 rounded-lg border border-white/10\">\n                                    {GAME_RULES.AVATARS.map((avatar, index) => (\n                                        <button\n                                            key={index}\n                                            onClick={() => setSelectedAvatar(avatar)}\n                                            className={`text-xl p-2.5 rounded-lg transition-all duration-200 border ${\n                                                selectedAvatar === avatar \n                                                    ? 'bg-gradient-to-br from-orange-500/20 to-orange-600/20 border-orange-500/30 shadow-[0_0_20px_rgba(251,146,60,0.3)] scale-110' \n                                                    : 'bg-white/5 border-white/10 hover:bg-white/10 hover:scale-105'\n                                            }`}\n                                        >\n                                            {avatar}\n                                        </button>\n                                    ))}\n                                </div>\n                            </div>\n                            \n                            <button \n                                onClick={handleAddPlayer} \n                                className=\"relative group bg-gradient-to-r from-emerald-500/20 to-emerald-600/20 hover:from-emerald-500/30 hover:to-emerald-600/30 text-emerald-400 font-semibold py-3 px-6 rounded-lg border border-emerald-500/30 shadow-[0_0_20px_rgba(16,185,129,0.2)] transition-all duration-200 hover:shadow-[0_0_30px_rgba(16,185,129,0.3)]\"\n                            >\n                                <span className=\"relative z-10\">Add Player</span>\n                                <div className=\"absolute inset-0 bg-gradient-to-r from-emerald-500/10 to-emerald-600/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200\"></div>\n                            </button>\n                        </div>\n                    </Modal>\n                )}\n\n                {showResultsModal && leagueState && (\n                    <ResultsModal\n                        players={players}\n                        onClose={() => setShowResultsModal(false)}\n                        onSubmit={handleAdvanceRound}\n                        round={leagueState.current_round}\n                    />\n                )}\n\n                {showPlayerProfileModal && selectedPlayerForProfile && (\n                    <PlayerProfileModal\n                        player={selectedPlayerForProfile}\n                        onClose={() => {\n                            setShowPlayerProfileModal(false);\n                            setSelectedPlayerForProfile(null);\n                        }}\n                    />\n                )}\n            </div>\n        </ThemeContext.Provider>\n    );\n}\n\n// --- \u5B50\u7EC4\u4EF6 ---\n\nconst Sidebar: React.FC<SidebarProps> = ({ currentPage, setCurrentPage, sidebarOpen, setSidebarOpen, players, onPlayerClick }) => {\n    const { theme, toggleTheme } = useTheme();\n    \n    const menuItems = [\n        { id: 'home', name: '\u9996\u9875', icon: LucideHome },\n        { id: 'registration', name: '\u73A9\u5BB6\u6CE8\u518C', icon: LucideUserPlus },\n        { id: 'league', name: '\u8054\u8D5B\u7BA1\u7406', icon: LucideGamepad2 },\n        { id: 'rankings', name: '\u6392\u884C\u699C', icon: LucideBarChart3 },\n    ];\n\n    return (\n        <>\n            {/* Mobile overlay */}\n            {sidebarOpen && (\n                <div \n                    className=\"fixed inset-0 bg-black/50 z-40 lg:hidden\" \n                    onClick={() => setSidebarOpen(false)}\n                />\n            )}\n            \n            {/* Sidebar */}\n            <div className={`fixed left-0 top-0 h-full ${theme === 'dark' ? 'bg-black/40' : 'bg-white/80'} backdrop-blur-2xl border-r ${theme === 'dark' ? 'border-white/10' : 'border-gray-200/50'} z-50 transform transition-all duration-300 ease-out ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'} lg:translate-x-0 lg:static lg:z-auto w-64 ${theme === 'dark' ? 'shadow-[0_0_50px_rgba(0,0,0,0.5)]' : 'shadow-[0_0_50px_rgba(0,0,0,0.1)]'}`}>\n                <div className={`absolute inset-0 ${theme === 'dark' ? 'bg-gradient-to-b from-white/5 to-transparent' : 'bg-gradient-to-b from-gray-50/50 to-transparent'}`}></div>\n                <div className=\"flex flex-col h-full\">\n                    {/* Header */}\n                    <div className={`relative p-6 border-b ${theme === 'dark' ? 'border-white/10' : 'border-gray-200/50'}`}>\n                        <div className=\"flex items-center justify-between relative z-10\">\n                            <div className=\"flex items-center gap-3\">\n                                <div className=\"relative p-2.5 bg-gradient-to-br from-orange-500/20 to-orange-600/20 backdrop-blur-sm border border-orange-500/30 rounded-lg shadow-[0_0_20px_rgba(251,146,60,0.3)]\">\n                                    <LucideCat className=\"text-orange-400\" size={20} />\n                                </div>\n                                <div>\n                                    <h2 className={`text-base font-semibold ${theme === 'dark' ? 'text-white/95' : 'text-gray-900'} tracking-tight`}>Boom League</h2>\n                                    <p className={`text-xs ${theme === 'dark' ? 'text-white/60' : 'text-gray-600'} font-medium`}>Tournament Tracker</p>\n                                </div>\n                            </div>\n                            <div className=\"flex items-center gap-2\">\n                                <button \n                                    onClick={toggleTheme}\n                                    className={`p-2 rounded-lg transition-all duration-200 border border-transparent ${theme === 'dark' ? 'text-white/70 hover:text-white hover:bg-white/10 hover:border-white/20' : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100 hover:border-gray-300'}`}\n                                    title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} theme`}\n                                >\n                                    {theme === 'dark' ? <LucideSun size={18} /> : <LucideMoon size={18} />}\n                                </button>\n                                <button \n                                    onClick={() => setSidebarOpen(false)}\n                                    className={`lg:hidden ${theme === 'dark' ? 'text-gray-400 hover:text-white' : 'text-gray-500 hover:text-gray-900'}`}\n                                >\n                                    <LucideX size={20} />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Navigation */}\n                    <nav className=\"flex-1 p-4 relative z-10\">\n                        <ul className=\"space-y-1\">\n                            {menuItems.map((item) => {\n                                const Icon = item.icon;\n                                const isActive = currentPage === item.id;\n                                return (\n                                    <li key={item.id}>\n                                        <button\n                                            onClick={() => {\n                                                setCurrentPage(item.id);\n                                                setSidebarOpen(false);\n                                            }}\n                                            className={`group relative w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 overflow-hidden ${\n                                                isActive\n                                                    ? 'bg-gradient-to-r from-orange-500/20 to-orange-600/20 text-orange-400 border border-orange-500/30 shadow-[0_0_20px_rgba(251,146,60,0.2)]'\n                                                    : theme === 'dark' \n                                                        ? 'text-white/70 hover:bg-white/5 hover:text-white border border-transparent hover:border-white/10'\n                                                        : 'text-gray-600 hover:bg-gray-100/50 hover:text-gray-900 border border-transparent hover:border-gray-200'\n                                            }`}\n                                        >\n                                            {isActive && (\n                                                <div className=\"absolute inset-0 bg-gradient-to-r from-orange-500/10 to-orange-600/10 backdrop-blur-sm\"></div>\n                                            )}\n                                            <Icon size={16} className=\"relative z-10\" />\n                                            <span className=\"font-medium text-sm relative z-10\">{item.name}</span>\n                                        </button>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </nav>\n\n                    {/* Quick Player List (only show when not on rankings page) */}\n                    {currentPage !== 'rankings' && players.length > 0 && (\n                        <div className={`relative p-4 border-t ${theme === 'dark' ? 'border-white/10' : 'border-gray-200/50'}`}>\n                            <h3 className={`text-xs font-semibold ${theme === 'dark' ? 'text-white/60' : 'text-gray-500'} mb-3 uppercase tracking-wider`}>Quick Access</h3>\n                            <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                                {players.slice(0, 4).map((player) => (\n                                    <button\n                                        key={player.id}\n                                        onClick={() => onPlayerClick(player)}\n                                        className={`relative w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm transition-all duration-200 border border-transparent ${\n                                            theme === 'dark' \n                                                ? 'text-white/70 hover:bg-white/5 hover:text-white hover:border-white/10'\n                                                : 'text-gray-600 hover:bg-gray-100/50 hover:text-gray-900 hover:border-gray-200'\n                                        }`}\n                                    >\n                                        <span className=\"text-base\">{player.avatar}</span>\n                                        <span className=\"truncate font-medium\">{player.name}</span>\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nconst Leaderboard: React.FC<LeaderboardProps> = ({ players, onPlayerClick }) => (\n    <div className=\"relative bg-black/20 backdrop-blur-2xl border border-white/10 rounded-lg shadow-[0_0_50px_rgba(0,0,0,0.3)] overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent\"></div>\n        <div className=\"relative z-10 p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n                <div className=\"relative p-2 bg-gradient-to-br from-yellow-500/20 to-orange-500/20 backdrop-blur-sm border border-yellow-500/30 rounded-lg shadow-[0_0_20px_rgba(251,191,36,0.2)]\">\n                    <LucideTrophy size={16} className=\"text-yellow-400\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-white/95 tracking-tight\">Leaderboard</h3>\n            </div>\n            <div className=\"space-y-2\">\n                {players.map((p, index) => (\n                    <div \n                        key={p.id} \n                        className=\"group relative flex items-center justify-between p-4 rounded-lg cursor-pointer transition-all duration-200 hover:bg-white/5 border border-transparent hover:border-white/10\"\n                        onClick={() => onPlayerClick && onPlayerClick(p)}\n                    >\n                        <div className=\"flex items-center gap-4\">\n                            <div className={`relative w-8 h-8 rounded-lg flex items-center justify-center font-semibold text-sm border ${\n                                index === 0 ? 'bg-gradient-to-br from-yellow-500/20 to-yellow-600/20 border-yellow-500/30 text-yellow-400 shadow-[0_0_15px_rgba(251,191,36,0.2)]' : \n                                index === 1 ? 'bg-gradient-to-br from-gray-300/20 to-gray-400/20 border-gray-400/30 text-gray-300' : \n                                index === 2 ? 'bg-gradient-to-br from-orange-400/20 to-orange-500/20 border-orange-500/30 text-orange-400' : \n                                'bg-white/5 border-white/10 text-white/70'\n                            }`}>\n                                {index + 1}\n                            </div>\n                            <span className=\"text-xl\">{p.avatar}</span>\n                            <span className=\"font-medium text-white/90\">{p.name}</span>\n                        </div>\n                        <div className=\"text-right\">\n                            <div className=\"font-semibold text-lg text-emerald-400\">{p.score}</div>\n                            <div className=\"text-xs text-white/60 font-medium\">VP</div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n);\n\nconst PlayerProfiles: React.FC<PlayerProfilesProps> = ({ players, onPlayerClick }) => (\n    <div className=\"relative bg-black/20 backdrop-blur-2xl border border-white/10 rounded-lg shadow-[0_0_50px_rgba(0,0,0,0.3)] overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent\"></div>\n        <div className=\"relative z-10 p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n                <div className=\"relative p-2 bg-gradient-to-br from-blue-500/20 to-purple-500/20 backdrop-blur-sm border border-blue-500/30 rounded-lg shadow-[0_0_20px_rgba(59,130,246,0.2)]\">\n                    <LucideUsers size={16} className=\"text-blue-400\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-white/95 tracking-tight\">Player Profiles</h3>\n            </div>\n            <div className=\"space-y-2\">\n                {players.map(p => (\n                    <div \n                        key={p.id} \n                        className=\"group relative p-4 rounded-lg cursor-pointer transition-all duration-200 hover:bg-white/5 border border-transparent hover:border-white/10\"\n                        onClick={() => onPlayerClick && onPlayerClick(p)}\n                    >\n                        <div className=\"flex items-center gap-3 mb-3\">\n                            <span className=\"text-xl\">{p.avatar}</span>\n                            <span className=\"font-medium text-white/90\">{p.name}</span>\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                            <div className=\"inline-flex items-center gap-1.5 px-2.5 py-1 bg-yellow-500/10 border border-yellow-500/20 rounded-md text-xs font-medium text-yellow-400\">\n                                <span>\uD83C\uDFC6</span>\n                                <span>{p.championships || 0} \u51A0\u519B</span>\n                            </div>\n                            <div className=\"inline-flex items-center gap-1.5 px-2.5 py-1 bg-gray-400/10 border border-gray-400/20 rounded-md text-xs font-medium text-gray-300\">\n                                <span>\uD83E\uDD48</span>\n                                <span>{p.runnerUp || 0} \u4E9A\u519B</span>\n                            </div>\n                            <div className=\"inline-flex items-center gap-1.5 px-2.5 py-1 bg-orange-500/10 border border-orange-500/20 rounded-md text-xs font-medium text-orange-400\">\n                                <span>\uD83E\uDD49</span>\n                                <span>{p.thirdPlace || 0} \u5B63\u519B</span>\n                            </div>\n                            <div className=\"inline-flex items-center gap-1.5 px-2.5 py-1 bg-white/5 border border-white/10 rounded-md text-xs font-medium text-white/70\">\n                                {p.history.length > 0 ? `${p.history.length} Games` : 'New Player'}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n);\n\n\nconst InfoCard: React.FC<InfoCardProps> = ({ icon, title, value }) => (\n    <div className=\"relative bg-black/20 backdrop-blur-2xl border border-white/10 rounded-lg p-5 hover:bg-white/5 transition-all duration-200 shadow-[0_0_30px_rgba(0,0,0,0.2)]\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-lg\"></div>\n        <div className=\"relative z-10 flex items-center gap-4\">\n            <div className=\"p-2.5 bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg\">\n                {icon}\n            </div>\n            <div>\n                <p className=\"text-white/60 text-sm font-medium\">{title}</p>\n                <p className=\"text-white font-semibold text-xl\">{value}</p>\n            </div>\n        </div>\n    </div>\n);\n\nconst ScheduleTimeline: React.FC<ScheduleTimelineProps> = ({ schedule, currentRound }) => (\n    <div className=\"relative bg-black/20 backdrop-blur-2xl border border-white/10 rounded-lg shadow-[0_0_50px_rgba(0,0,0,0.3)] overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent\"></div>\n        <div className=\"relative z-10 p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n                <div className=\"relative p-2 bg-gradient-to-br from-indigo-500/20 to-purple-500/20 backdrop-blur-sm border border-indigo-500/30 rounded-lg shadow-[0_0_20px_rgba(99,102,241,0.2)]\">\n                    <LucideScrollText size={16} className=\"text-indigo-400\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-white/95 tracking-tight\">Tournament Schedule</h3>\n            </div>\n            <div className=\"space-y-2\">\n                {schedule.map(roundInfo => {\n                    const isActive = roundInfo.round === currentRound;\n                    return (\n                        <div key={roundInfo.round} className={`relative p-4 rounded-lg transition-all duration-300 border ${\n                            isActive \n                                ? 'bg-gradient-to-r from-orange-500/10 to-orange-600/10 border-orange-500/30 shadow-[0_0_20px_rgba(251,146,60,0.1)]' \n                                : 'bg-white/5 border-white/10 hover:bg-white/10'\n                        }`}>\n                            <div className=\"flex items-center justify-between\">\n                                <p className={`font-semibold text-base ${isActive ? 'text-orange-400' : 'text-white/90'}`}>\n                                    Round {roundInfo.round}\n                                </p>\n                                {isActive && (\n                                    <div className=\"w-2 h-2 bg-orange-400 rounded-full animate-pulse shadow-[0_0_10px_rgba(251,146,60,0.5)]\"></div>\n                                )}\n                            </div>\n                            <p className=\"text-sm text-white/60 mt-1 font-medium\">{roundInfo.vpMode.name} \u2022 {roundInfo.specialRule}</p>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    </div>\n);\n\n// Page Components\nconst HomePage: React.FC<HomePageProps> = ({ leagueState, players, handleStartLeague, handleResetLeague, handlePlayerClick }) => {\n    if (!leagueState || leagueState.status === 'setup') {\n        return (\n            <div className=\"space-y-8\">\n                <div className=\"text-center\">\n                    <div className=\"inline-flex items-center gap-6 mb-8\">\n                        <div className=\"relative p-6 bg-gradient-to-br from-orange-500/20 to-orange-600/20 backdrop-blur-sm border border-orange-500/30 rounded-lg shadow-[0_0_40px_rgba(251,146,60,0.3)]\">\n                            <LucideCat className=\"text-orange-400\" size={40} />\n                        </div>\n                        <div className=\"text-left\">\n                            <h1 className=\"text-5xl font-bold bg-gradient-to-r from-white via-white to-orange-400 bg-clip-text text-transparent tracking-tight\">\n                                Boom League\n                            </h1>\n                            <p className=\"text-white/60 text-lg font-medium mt-2\">Professional Tournament Management</p>\n                        </div>\n                    </div>\n                </div>\n                \n                {players.length > 0 && (\n                    <div className=\"relative bg-black/20 backdrop-blur-2xl border border-white/10 rounded-lg p-8 shadow-[0_0_50px_rgba(0,0,0,0.3)]\">\n                        <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-lg\"></div>\n                        <div className=\"relative z-10\">\n                            <div className=\"flex items-center gap-4 mb-6\">\n                                <div className=\"w-1 h-8 bg-gradient-to-b from-orange-400 to-orange-600 rounded-full shadow-[0_0_10px_rgba(251,146,60,0.5)]\"></div>\n                                <h2 className=\"text-2xl font-semibold text-white/95 tracking-tight\">Quick Start</h2>\n                            </div>\n                            <p className=\"text-white/70 mb-8 text-lg\">\n                                <span className=\"text-orange-400 font-semibold\">{players.length}</span> players registered and ready to compete\n                            </p>\n                            <button \n                                onClick={handleStartLeague} \n                                disabled={players.length < 2}\n                                className=\"relative group bg-gradient-to-r from-orange-500/20 to-orange-600/20 hover:from-orange-500/30 hover:to-orange-600/30 text-orange-400 font-semibold py-4 px-8 rounded-lg border border-orange-500/30 shadow-[0_0_30px_rgba(251,146,60,0.2)] transition-all duration-200 hover:shadow-[0_0_40px_rgba(251,146,60,0.3)] disabled:from-white/5 disabled:to-white/5 disabled:text-white/40 disabled:border-white/10 disabled:cursor-not-allowed disabled:shadow-none\"\n                            >\n                                <span className=\"relative z-10\">Start New Tournament</span>\n                                <div className=\"absolute inset-0 bg-gradient-to-r from-orange-500/10 to-orange-600/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200\"></div>\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n    \n    if (leagueState.status === 'in_progress') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"text-center\">\n                    <h2 className=\"text-4xl font-bold text-orange-400 mb-2\">\u8054\u8D5B\u8FDB\u884C\u4E2D</h2>\n                    <p className=\"text-gray-300\">\u7B2C {leagueState.current_round} / {GAME_RULES.MAX_ROUNDS} \u8F6E</p>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <Leaderboard players={players} onPlayerClick={handlePlayerClick} />\n                    <PlayerProfiles players={players} onPlayerClick={handlePlayerClick} />\n                </div>\n            </div>\n        );\n    }\n    \n    if (leagueState.status === 'finished') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"text-center p-10 bg-gray-800/70 backdrop-blur-md rounded-3xl shadow-lg flex flex-col items-center gap-4 border-2 border-yellow-400\">\n                    <LucideCrown className=\"text-yellow-400\" size={80} />\n                    <h2 className=\"text-5xl font-bold text-yellow-300\">\u8054\u8D5B\u7ED3\u675F\uFF01</h2>\n                    {leagueState.winner && (\n                        <>\n                            <div className=\"text-6xl mt-4\">{leagueState.winner.avatar}</div>\n                            <p className=\"text-4xl font-bold text-white mt-2\">{leagueState.winner.name}</p>\n                            <p className=\"text-xl text-gray-300 mt-2\">{leagueState.winner.reason}</p>\n                        </>\n                    )}\n                    <button \n                        onClick={handleResetLeague} \n                        className=\"mt-8 bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-8 rounded-lg shadow-lg transition-transform transform hover:scale-105\"\n                    >\n                        \u5F00\u542F\u65B0\u8054\u8D5B\n                    </button>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst PlayerRegistrationPage: React.FC<PlayerRegistrationPageProps> = ({ players, handleAddPlayer, handleDeletePlayer, handlePlayerClick, newPlayerName, setNewPlayerName, selectedAvatar, setSelectedAvatar, showPlayerModal, setShowPlayerModal }) => {\n    return (\n        <div className=\"space-y-8\">\n            <div className=\"text-center\">\n                <h2 className=\"text-4xl font-bold bg-gradient-to-r from-orange-400 to-orange-600 bg-clip-text text-transparent mb-3\">\n                    \u73A9\u5BB6\u6CE8\u518C\n                </h2>\n                <p className=\"text-slate-400 text-lg\">\u7BA1\u7406\u53C2\u4E0E\u8054\u8D5B\u7684\u73A9\u5BB6</p>\n            </div>\n            \n            <div className=\"bg-slate-800/40 backdrop-blur-xl rounded-3xl p-8 border border-slate-700/30 shadow-2xl\">\n                <div className=\"flex justify-between items-center mb-6\">\n                    <h3 className=\"text-2xl font-bold text-white flex items-center gap-3\">\n                        <div className=\"w-2 h-8 bg-gradient-to-b from-emerald-400 to-emerald-600 rounded-full\"></div>\n                        \u5DF2\u6CE8\u518C\u73A9\u5BB6 \n                        <span className=\"text-orange-400\">({players.length}/6)</span>\n                    </h3>\n                    <button \n                        onClick={() => setShowPlayerModal(true)} \n                        disabled={players.length >= 6}\n                        className=\"flex items-center gap-2 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-bold py-3 px-6 rounded-2xl shadow-lg shadow-emerald-500/25 transition-all duration-200 hover:scale-105 disabled:from-slate-600 disabled:to-slate-700 disabled:cursor-not-allowed disabled:scale-100 disabled:shadow-none\"\n                    >\n                        <LucidePlus size={18} /> \u6DFB\u52A0\u73A9\u5BB6\n                    </button>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {players.map(p => {\n                        const stats = UTILS.calculatePlayerStats(p);\n                        return (\n                            <div key={p.id} className=\"flex items-center justify-between bg-slate-800/50 hover:bg-slate-700/60 p-5 rounded-2xl border border-slate-700/30 cursor-pointer transition-all duration-200 hover:scale-[1.02] shadow-lg\">\n                                <div \n                                    className=\"flex items-center gap-4 flex-1\"\n                                    onClick={() => handlePlayerClick(p)}\n                                >\n                                    <div className=\"text-4xl\">{p.avatar}</div>\n                                    <div className=\"flex flex-col\">\n                                        <span className=\"font-bold text-white text-lg\">{p.name}</span>\n                                        <div className=\"flex flex-wrap gap-2 mt-1\">\n                                            {stats.championships > 0 && (\n                                                <span className=\"text-xs bg-yellow-500/20 text-yellow-400 px-2 py-1 rounded-full\">\n                                                    \uD83C\uDFC6 {stats.championships}\u51A0\n                                                </span>\n                                            )}\n                                            <span className=\"text-xs bg-slate-700/50 text-slate-300 px-2 py-1 rounded-full\">\n                                                {stats.totalGames > 0 ? `${stats.totalGames}\u573A \u2022 ${stats.winRate}%\u80DC\u7387` : '\u65B0\u73A9\u5BB6'}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button \n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleDeletePlayer(p.id);\n                                    }} \n                                    className=\"p-2 text-red-400 hover:text-white hover:bg-red-500/20 rounded-xl transition-all duration-200\"\n                                >\n                                    <LucideTrash2 size={18} />\n                                </button>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst LeagueManagementPage: React.FC<LeagueManagementPageProps> = ({ leagueState, players, handleStartLeague, handleResetLeague, renderInProgress, setShowResultsModal }) => {\n    if (!leagueState || leagueState.status === 'setup') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"text-center\">\n                    <h2 className=\"text-4xl font-bold text-orange-400 mb-2\">\u8054\u8D5B\u7BA1\u7406</h2>\n                    <p className=\"text-gray-300\">\u521B\u5EFA\u548C\u7BA1\u7406\u4F60\u7684 Boom League</p>\n                </div>\n                \n                <div className=\"bg-gray-800/50 rounded-2xl p-6\">\n                    <h3 className=\"text-2xl font-bold text-white mb-4\">\u521B\u5EFA\u65B0\u8054\u8D5B</h3>\n                    <p className=\"text-gray-300 mb-4\">\n                        \u5F53\u524D\u6709 {players.length} \u540D\u73A9\u5BB6\u6CE8\u518C\u3002\u9700\u8981\u81F3\u5C11 2 \u540D\u73A9\u5BB6\u624D\u80FD\u5F00\u59CB\u8054\u8D5B\u3002\n                    </p>\n                    <button \n                        onClick={handleStartLeague} \n                        disabled={players.length < 2}\n                        className=\"bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-8 rounded-lg shadow-xl transition-transform transform hover:scale-105 disabled:bg-gray-500 disabled:cursor-not-allowed disabled:scale-100\"\n                    >\n                        \u5F00\u59CB\u8054\u8D5B\n                    </button>\n                </div>\n            </div>\n        );\n    }\n    \n    if (leagueState.status === 'in_progress') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"text-center\">\n                    <h2 className=\"text-4xl font-bold text-orange-400 mb-2\">\u8054\u8D5B\u7BA1\u7406</h2>\n                    <p className=\"text-gray-300\">\u5F53\u524D\u8054\u8D5B\u8FDB\u884C\u4E2D</p>\n                </div>\n                {renderInProgress()}\n            </div>\n        );\n    }\n    \n    if (leagueState.status === 'finished') {\n        return (\n            <div className=\"space-y-6\">\n                <div className=\"text-center\">\n                    <h2 className=\"text-4xl font-bold text-orange-400 mb-2\">\u8054\u8D5B\u7BA1\u7406</h2>\n                    <p className=\"text-gray-300\">\u8054\u8D5B\u5DF2\u7ED3\u675F</p>\n                </div>\n                \n                <div className=\"text-center p-10 bg-gray-800/70 backdrop-blur-md rounded-3xl shadow-lg flex flex-col items-center gap-4 border-2 border-yellow-400\">\n                    <LucideCrown className=\"text-yellow-400\" size={80} />\n                    <h2 className=\"text-3xl font-bold text-yellow-300\">\u8054\u8D5B\u7ED3\u675F\uFF01</h2>\n                    {leagueState.winner && (\n                        <>\n                            <div className=\"text-4xl mt-4\">{leagueState.winner.avatar}</div>\n                            <p className=\"text-2xl font-bold text-white mt-2\">{leagueState.winner.name}</p>\n                            <p className=\"text-lg text-gray-300 mt-2\">{leagueState.winner.reason}</p>\n                        </>\n                    )}\n                    <button \n                        onClick={handleResetLeague} \n                        className=\"mt-8 bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-8 rounded-lg shadow-lg transition-transform transform hover:scale-105\"\n                    >\n                        \u5F00\u542F\u65B0\u8054\u8D5B\n                    </button>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst PlayerRankingsPage: React.FC<PlayerRankingsPageProps> = ({ players, onPlayerClick }) => {\n    const sortedPlayers = [...players].sort((a, b) => {\n        // Sort by championships first, then by current score\n        if (b.championships !== a.championships) {\n            return (b.championships || 0) - (a.championships || 0);\n        }\n        return b.score - a.score;\n    });\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-4xl font-bold text-orange-400 mb-2\">\u73A9\u5BB6\u6392\u884C\u699C</h2>\n                <p className=\"text-gray-300\">\u67E5\u770B\u6240\u6709\u73A9\u5BB6\u7684\u8BE6\u7EC6\u7EDF\u8BA1\u548C\u6392\u540D</p>\n            </div>\n            \n            <div className=\"bg-gray-800/50 rounded-2xl p-6\">\n                <h3 className=\"text-2xl font-bold text-white mb-6 flex items-center gap-2\">\n                    <LucideTrophy className=\"text-yellow-400\" />\n                    \u603B\u6392\u884C\u699C\n                </h3>\n                \n                <div className=\"space-y-4\">\n                    {sortedPlayers.map((player, index) => {\n                        const stats = UTILS.calculatePlayerStats(player);\n                        return (\n                            <div \n                                key={player.id}\n                                className=\"flex items-center justify-between bg-gray-700/70 p-4 rounded-lg shadow-md hover:bg-gray-600/70 cursor-pointer transition-colors\"\n                                onClick={() => onPlayerClick(player)}\n                            >\n                                <div className=\"flex items-center gap-4\">\n                                    <span className={`font-bold text-2xl w-8 text-center ${index === 0 ? 'text-yellow-400' : index === 1 ? 'text-gray-300' : index === 2 ? 'text-orange-400' : 'text-gray-500'}`}>\n                                        {index + 1}\n                                    </span>\n                                    <span className=\"text-3xl\">{player.avatar}</span>\n                                    <div className=\"flex flex-col\">\n                                        <span className=\"font-semibold text-white text-xl\">{player.name}</span>\n                                        <div className=\"flex gap-4 text-sm text-gray-400\">\n                                            <span>\uD83C\uDFC6 {stats.championships}\u51A0</span>\n                                            <span>\uD83C\uDFAE {stats.totalGames}\u573A</span>\n                                            <span>\uD83D\uDCCA \u80DC\u7387{stats.winRate}%</span>\n                                            <span>\uD83D\uDCC8 \u5E73\u5747\u6392\u540D{stats.averagePlacement}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"text-right\">\n                                    <div className=\"text-2xl font-bold text-green-400\">{player.score}</div>\n                                    <div className=\"text-sm text-gray-400\">\u5F53\u524D\u5206\u6570</div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                \n                {players.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-400\">\n                        <LucideUsers size={48} className=\"mx-auto mb-4 opacity-50\" />\n                        <p>\u8FD8\u6CA1\u6709\u6CE8\u518C\u7684\u73A9\u5BB6</p>\n                        <p className=\"text-sm\">\u524D\u5F80\u73A9\u5BB6\u6CE8\u518C\u9875\u9762\u6DFB\u52A0\u73A9\u5BB6</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst PlayerProfileModal: React.FC<PlayerProfileModalProps> = ({ player, onClose }) => {\n    if (!player) return null;\n    \n    const stats = UTILS.calculatePlayerStats(player);\n    \n    return (\n        <Modal onClose={onClose} title={`${player.avatar} ${player.name} \u7684\u6863\u6848`}>\n            <div className=\"space-y-6\">\n                {/* Basic Stats */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-yellow-400\">{player.championships || 0}</p>\n                        <p className=\"text-sm text-white/70\">\uD83C\uDFC6 \u51A0\u519B\u6B21\u6570</p>\n                    </div>\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-gray-300\">{player.runnerUp || 0}</p>\n                        <p className=\"text-sm text-white/70\">\uD83E\uDD48 \u4E9A\u519B\u6B21\u6570</p>\n                    </div>\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-orange-400\">{player.thirdPlace || 0}</p>\n                        <p className=\"text-sm text-white/70\">\uD83E\uDD49 \u5B63\u519B\u6B21\u6570</p>\n                    </div>\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-emerald-400\">{player.score}</p>\n                        <p className=\"text-sm text-white/70\">\u5F53\u524D\u5206\u6570</p>\n                    </div>\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-blue-400\">{stats.totalGames}</p>\n                        <p className=\"text-sm text-white/70\">\u603B\u6E38\u620F\u6570</p>\n                    </div>\n                    <div className=\"bg-white/5 border border-white/10 p-4 rounded-lg text-center\">\n                        <p className=\"text-2xl font-bold text-purple-400\">{stats.averagePlacement}</p>\n                        <p className=\"text-sm text-white/70\">\u5E73\u5747\u6392\u540D</p>\n                    </div>\n                </div>\n\n                {/* Win Rate */}\n                <div className=\"bg-gray-700/50 p-4 rounded-lg\">\n                    <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-white font-semibold\">\u80DC\u7387</span>\n                        <span className=\"text-orange-400 font-bold\">{stats.winRate}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                        <div \n                            className=\"bg-orange-400 h-2 rounded-full transition-all duration-300\" \n                            style={{width: `${stats.winRate}%`}}\n                        ></div>\n                    </div>\n                </div>\n\n                {/* Placement Distribution */}\n                {stats.totalGames > 0 && (\n                    <div className=\"bg-gray-700/50 p-4 rounded-lg\">\n                        <h4 className=\"text-white font-semibold mb-3\">\u6392\u540D\u5206\u5E03</h4>\n                        <div className=\"space-y-2\">\n                            {[1, 2, 3, 4, 5, 6].map(place => {\n                                const count = stats.placements[place] || 0;\n                                const percentage = stats.totalGames > 0 ? (count / stats.totalGames * 100).toFixed(1) : 0;\n                                return count > 0 ? (\n                                    <div key={place} className=\"flex justify-between items-center\">\n                                        <span className={`text-sm ${place === 1 ? 'text-yellow-400' : place === 2 ? 'text-gray-300' : place === 3 ? 'text-orange-400' : 'text-gray-500'}`}>\n                                            \u7B2C{place}\u540D\n                                        </span>\n                                        <div className=\"flex items-center gap-2\">\n                                            <span className=\"text-white text-sm\">{count}\u6B21</span>\n                                            <span className=\"text-gray-400 text-xs\">({percentage}%)</span>\n                                        </div>\n                                    </div>\n                                ) : null;\n                            })}\n                        </div>\n                    </div>\n                )}\n\n                {/* Recent Games */}\n                {player.history && player.history.length > 0 && (\n                    <div className=\"bg-gray-700/50 p-4 rounded-lg\">\n                        <h4 className=\"text-white font-semibold mb-3\">\u6700\u8FD1\u6BD4\u8D5B</h4>\n                        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                            {player.history.slice(-5).reverse().map((game, index) => (\n                                <div key={index} className=\"flex justify-between items-center text-sm\">\n                                    <span className=\"text-gray-300\">\u7B2C{game.round}\u8F6E</span>\n                                    <span className={`font-semibold ${game.placement === 1 ? 'text-yellow-400' : game.placement === 2 ? 'text-gray-300' : game.placement === 3 ? 'text-orange-400' : 'text-gray-500'}`}>\n                                        \u7B2C{game.placement}\u540D\n                                    </span>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </Modal>\n    );\n};\n\nconst Modal: React.FC<ModalProps> = ({ children, onClose, title }) => (\n    <div className=\"fixed inset-0 bg-black/70 backdrop-blur-md flex items-center justify-center z-50 p-4\">\n        <div className=\"relative bg-black/40 backdrop-blur-2xl border border-white/10 rounded-lg shadow-[0_0_80px_rgba(0,0,0,0.5)] p-8 w-full max-w-md animate-in fade-in zoom-in duration-200\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-white/5 to-transparent rounded-lg\"></div>\n            <div className=\"relative z-10\">\n                <div className=\"flex justify-between items-center mb-6\">\n                    <h3 className=\"text-xl font-semibold bg-gradient-to-r from-white to-orange-400 bg-clip-text text-transparent tracking-tight\">\n                        {title}\n                    </h3>\n                    <button \n                        onClick={onClose} \n                        className=\"p-2 text-white/60 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200 border border-transparent hover:border-white/20\"\n                    >\n                        <LucideX size={18} />\n                    </button>\n                </div>\n                {children}\n            </div>\n        </div>\n    </div>\n);\n\nconst ResultsModal: React.FC<ResultsModalProps> = ({ players, onClose, onSubmit, round }) => {\n    const [rankedPlayers, setRankedPlayers] = useState(players.map(p => p.id));\n\n    const handleDragStart = (e: React.DragEvent, index: number) => {\n        e.dataTransfer.setData(\"draggedIndex\", index.toString());\n    };\n\n    const handleDrop = (e: React.DragEvent, dropIndex: number) => {\n        const draggedIndex = parseInt(e.dataTransfer.getData(\"draggedIndex\"));\n        const newRankedPlayers = [...rankedPlayers];\n        const [draggedItem] = newRankedPlayers.splice(draggedIndex, 1);\n        newRankedPlayers.splice(dropIndex, 0, draggedItem);\n        setRankedPlayers(newRankedPlayers);\n    };\n\n    const getPlayerById = (id: string) => players.find(p => p.id === id);\n\n    return (\n        <Modal onClose={onClose} title={`\u8F93\u5165\u7B2C ${round} \u8F6E\u6BD4\u8D5B\u7ED3\u679C`}>\n            <p className=\"text-gray-400 mb-4\">\u8BF7\u62D6\u52A8\u73A9\u5BB6\u5361\u7247\u4EE5\u786E\u5B9A\u672C\u8F6E\u540D\u6B21\uFF08\u4ECE\u4E0A\u5230\u4E0B\u4E3A 1-N \u540D\uFF09\u3002</p>\n            <div className=\"space-y-2\">\n                {rankedPlayers.map((playerId, index) => {\n                    const player = getPlayerById(playerId);\n                    if (!player) return null;\n                    return (\n                        <div\n                            key={playerId}\n                            draggable\n                            onDragStart={(e) => handleDragStart(e, index)}\n                            onDragOver={(e) => e.preventDefault()}\n                            onDrop={(e) => handleDrop(e, index)}\n                            className=\"flex items-center gap-4 p-3 bg-gray-700 rounded-lg cursor-grab active:cursor-grabbing\"\n                        >\n                            <span className=\"font-bold text-lg text-orange-400 w-6\">{index + 1}</span>\n                            <span className=\"text-2xl\">{player.avatar}</span>\n                            <span className=\"text-white font-semibold\">{player.name}</span>\n                        </div>\n                    );\n                })}\n            </div>\n            <button\n                onClick={() => onSubmit(rankedPlayers)}\n                className=\"w-full mt-6 bg-green-500 hover:bg-green-600 text-white font-bold py-3 rounded-lg transition-colors\"\n            >\n                \u786E\u8BA4\u5E76\u8FDB\u5165\u4E0B\u4E00\u8F6E\n            </button>\n        </Modal>\n    );\n};\n", "export default {'entry':{'module':'/build/entry.client-PFM6IQRZ.js','imports':['/build/_shared/chunk-X3PXDGUE.js','/build/_shared/chunk-VWXHOGIJ.js','/build/_shared/chunk-F4KNNEUR.js','/build/_shared/chunk-PLT55Z5M.js','/build/_shared/chunk-2Z2JGDFU.js','/build/_shared/chunk-E7FOCUHM.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-LUYQHC4M.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-76CNCFHX.js','imports':['/build/_shared/chunk-LFAKDRIB.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'386de87b','hmr':{'runtime':'/build/_shared\\\\chunk-E7FOCUHM.js','timestamp':1754704880882},'url':'/build/manifest-386DE87B.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\Kross\\\\Desktop\\\\coding\\\\boom_league\\\\node_modules\\\\@remix-run\\\\dev\\\\dist\\\\config\\\\defaults\\\\entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "session"]
}
